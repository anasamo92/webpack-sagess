0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files\\nodejs\\node.exe',
1 verbose cli   'C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish' ]
2 info using npm@3.10.8
3 info using node@v7.0.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: 'D:\\modified_npm_packages\\webpack-sagess',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory C:\Users\ASA18330\AppData\Roaming\npm-cache\webpack-sagess\1.0.5\package.tgz not in flight; packing
9 verbose correctMkdir C:\Users\ASA18330\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
10 info lifecycle webpack-sagess@1.0.5~prepublish: webpack-sagess@1.0.5
11 silly lifecycle webpack-sagess@1.0.5~prepublish: no script for prepublish, continuing
12 verbose tar pack [ 'C:\\Users\\ASA18330\\AppData\\Roaming\\npm-cache\\webpack-sagess\\1.0.5\\package.tgz',
12 verbose tar pack   'D:\\modified_npm_packages\\webpack-sagess' ]
13 verbose tarball C:\Users\ASA18330\AppData\Roaming\npm-cache\webpack-sagess\1.0.5\package.tgz
14 verbose folder D:\modified_npm_packages\webpack-sagess
15 verbose addLocalTarball adding from inside cache C:\Users\ASA18330\AppData\Roaming\npm-cache\webpack-sagess\1.0.5\package.tgz
16 verbose correctMkdir C:\Users\ASA18330\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
17 silly cache afterAdd webpack-sagess@1.0.5
18 verbose afterAdd C:\Users\ASA18330\AppData\Roaming\npm-cache\webpack-sagess\1.0.5\package\package.json not in flight; writing
19 verbose correctMkdir C:\Users\ASA18330\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
20 verbose afterAdd C:\Users\ASA18330\AppData\Roaming\npm-cache\webpack-sagess\1.0.5\package\package.json written
21 silly publish { name: 'webpack-sagess',
21 silly publish   version: '1.0.5',
21 silly publish   description: 'Sagess webpack config',
21 silly publish   main: './index.js',
21 silly publish   bin: { 'sagess-dev-server': 'launcher.js' },
21 silly publish   scripts:
21 silly publish    { prepublishOnly: 'npm run build',
21 silly publish      build: 'better-npm-run build',
21 silly publish      test: 'echo "No test specified"' },
21 silly publish   babel: { presets: [ 'sagess' ] },
21 silly publish   betterScripts: { build: { command: 'babel src/ --out-dir .', env: [Object] } },
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+https://github.com/anasamo92/webpack-sagess.git' },
21 silly publish   keywords: [ 'sagess', 'webpack' ],
21 silly publish   license: 'MIT',
21 silly publish   dependencies:
21 silly publish    { autoprefixer: '7.1.6',
21 silly publish      'babel-loader': '7.1.2',
21 silly publish      'babel-polyfill': '6.26.0',
21 silly publish      'babel-preset-sagess': '^1.0.6',
21 silly publish      'cache-loader': '1.1.0',
21 silly publish      'case-sensitive-paths-webpack-plugin': '2.1.1',
21 silly publish      'css-loader': '0.28.7',
21 silly publish      cssnano: '4.0.0-rc.2',
21 silly publish      'eslint-config-sagess': '^1.0.6',
21 silly publish      'eslint-loader': '1.9.0',
21 silly publish      'extract-text-webpack-plugin': '3.0.2',
21 silly publish      'file-loader': '1.1.5',
21 silly publish      'fork-ts-checker-webpack-plugin': '0.2.8',
21 silly publish      'html-webpack-plugin': '2.30.1',
21 silly publish      lodash: '4.17.4',
21 silly publish      'node-sass': '4.5.3',
21 silly publish      'null-loader': '0.1.1',
21 silly publish      'postcss-cssnext': '3.0.2',
21 silly publish      'postcss-flexbugs-fixes': '3.2.0',
21 silly publish      'postcss-import': '11.0.0',
21 silly publish      'postcss-loader': '2.0.8',
21 silly publish      'react-dev-utils': '4.1.0',
21 silly publish      'react-error-overlay': '2.0.2',
21 silly publish      'react-hot-loader': '3.1.1',
21 silly publish      'sass-loader': '6.0.6',
21 silly publish      'source-map-loader': '0.2.3',
21 silly publish      'style-loader': '0.19.0',
21 silly publish      'thread-loader': '1.1.2',
21 silly publish      'ts-loader': '3.1.1',
21 silly publish      'uglifyjs-webpack-plugin': '1.0.1',
21 silly publish      'url-loader': '0.6.2',
21 silly publish      webpack: '3.8.1',
21 silly publish      'webpack-bundle-analyzer': '2.9.0',
21 silly publish      'webpack-dev-server': '2.9.3',
21 silly publish      'whatwg-fetch': '2.0.3' },
21 silly publish   devDependencies: { 'babel-cli': '6.26.0', 'better-npm-run': '0.1.0' },
21 silly publish   readme: '# Sagess Webpack preset\r\n\r\nStandard Webpack preset for Sagess compliant projects. It relies on environment variables, set in `process.env`.\r\n\r\nTo configure this, a good option is to use [better-npm-run]( https://www.npmjs.com/package/better-npm-run). It will run npm script with environment variables.\r\n\r\n## Environment variables\r\n\r\n### Dev server variables\r\n\r\n- `DEV_SERVER_PROTOCOL` (default `\'http\'`) : webpack dev server protocol\r\n- `DEV_SERVER_HOST` (default `\'localhost\'`): webpack dev server hostname\r\n- `DEV_SERVER_PORT` (default `3000`): webpack dev server port\r\n- `PUBLIC_PATH` (default `\'/\'`): path to the built files on the webpack dev server\r\n- `PAGE_TITLE` (default `\'You project landing page\'`): webpack dev server page title\r\n- `GENERATE_HTML` (default `false`): automatically generate the `index.html`\r\n\r\n### Output variables\r\n\r\n- `OUTPUT_DIR` (default `\'./dir\'`): output directory\r\n- `OUTPUT_PUBLIC_PATH` : Path from the CSS file to the ressources folder, for resolving fonts, images, ... (should be `\'/\'`, or `/assets/` ...)\r\n- `USE_VERSION` (default= `false`): If the version should be used in file name generated, for js et css (`[project_name].[project_version].js`,`[project_name].project_version].css`)\r\n\r\n### Output options\r\n\r\n- `DEV` (default `true`): Flag to mark the development state. Exposed globally through the variable `__DEV__` (needed for devtools)\r\n- `HOT_RELOAD` (default `false`): Flag to disable hot reload, even in DEV\r\n- `MINIMIFY` (default `false`): minimify the sources\r\n- `NODE_ENV` (default `development`): If the environnement is developpement, or production (use `production` for recette or production). Should always be set\r\n- `SOURCE_MAPS` (default= `true`): Toggles source maps generation\r\n- `LEGACY_EXPORTS` (default= `\'false\'`): Output exports to legacy module.exports and not to ES6 export\r\n- `LEGACY_LODASH` (default= `\'false\'`): Disable lodash transformation to more precise import (for example `import {toPairs} from \'lodash\'`, transformed to `import toPairs from \'lodash/toPairs\'`)\r\n- `USE_POLYFILL` (default= `true`): If babel polyfill should be added to entries.\r\n- `DROP_CONSOLE` (default= `false`): If console statement should be dropped when MINIMIFY\r\n- `CHUNK_FILE_NAME` (default= `\'chunks/[name]_[hash].[ext]\'`): Chunk file naming\r\n- `ECMA_MODE` (default= `\'5\'`): Output mode for Uglify\r\n\r\n### Miscellaneous\r\n\r\n- `ENTRY_FILE_PATH` (default `\'./src\'`): project entry file path, that is to say the file launching the app\r\n- `ANCHOR_CLASS` (default `\'your-project\'`): class used to anchor the `ReactDOM.render`. Exposed globally through the variable `__ANCHOR_CLASS__`\r\n- `BROWERS` (default: `\'>1%|last 4 versions|Firefox ESR|not ie < 9\'`): Browser query for Babel preset and PostCss\r\n- `ASSET_LIMIT` (default: `\'10000\'`): Size threshold in bytes to include in base64 in css\r\n- `ANALYZE` (default `\'./Webpack\'`): Use webpack bundle analyzer to see details about bundle\r\n- `IS_VERTIGO` (default `\'false\'`): Env variable, used in sagess-components > 2.2.2, to defined if default values should be partial or not. If you use Vertigo, put this to true, if you have problem when upgrading (save actions not working, because of null values)\r\n- `USE_CACHE` (default `\'true\'`): If a local cache should be used for faster rebuild (cache folder is .cache-loader)\r\n- `PARALLEL_BUILD` (default `\'false\'`): If initial build should be done in parallel, for faster build\r\n\r\n### LEGACY (API_ROOT and BASE_URL are better defined as externals inside `<script>` in your html)\r\n\r\n- `API_PROTOCOL` (default `\'http\'`): Protocol for API\r\n- `API_HOST` (default `\'localhost\'`): Default host for API\r\n- `API_PORT` (default `\'8080\'`): Default port for API\r\n- `API_SUBDOMAIN` (default `\'\'`): Default subdomain for API\r\n- `API_ROOT` (default `${API_PROTOCOL}://${API_HOST}:${API_PORT}/${API_SUBDOMAIN}`): Root URL for API\r\n- `BASE_URL` (default `\'\'`): Default root url for navigate and link\r\n- `LOCAL_FOCUS` (default `\'false\'`): Env variable to use a local focus. Better user webpack alias directly\r\n- `LEGACY_SEARCH_API` (default `\'false\'`): If the legacy search API should be used\r\n\r\n## Webpack configuration builder\r\n\r\nCreate a file `postcss.config.js`\r\n\r\nPostCSS is a great tool to transform CSS, with many plugins, such as Autoprefixer, ...\r\nThere is a distinct configuration file for PostCSS, the default config contains Autoprefixer.\r\n\r\nSee [PostCSS Loader](https://github.com/postcss/postcss-loader) and [PostCSS](http://postcss.org/)\r\n\r\n```js\r\nconst defaultConfig = require(\'webpack-sagess/postcss.config.js\');\r\n// Load the default config.\r\n\r\nmodule.exports = defaultConfig;\r\n```\r\n\r\nCreate a file `webpack.config.js` with a content, such as this :\r\n\r\n```js\r\nconst baseConfig = require(\'webpack-sagess/config/base\');\r\nconst envParser = require(\'webpack-sagess/webpack-utilities/env-parser\');\r\n\r\nconst myConfig = baseConfig(process.env, {});\r\n\r\n// Do your own modification\r\n\r\n// Add externals, alias, defined variable, plugin, loader, change filename, change HTML template,  ...\r\n// See https://github.com/KleeGroup/webpack-sagess/blob/webpack2/src/webpack-utilities/config-builder.js\r\n// Or see base config https://github.com/KleeGroup/webpack-sagess/blob/webpack2/src/config/base.js\r\n\r\n/*\r\nmyConfig.addExternal(\'__API_ROOT__\', \'__API_ROOT__\');\r\n// Add alias with relative path\r\nmyConfig.addAlias(\'sagess-core\', \'../sagess-core\');\r\n// Or not\r\nmyConfig.addAlias(\'truc\', \'C:/bla/truc\', false);\r\n\r\nmyConfig.addDefinedVariable(\'__DEV__\', parsedEnv.DEV ? \'true\' : \'false\');\r\n\r\n// Add plugin or loader directly, or using a function, so the resolution is done when calling toWebpackConfig\r\n// For example, the DefinePlugin is given as a function, so variable can be added easily\r\nmyConfig.addPlugin(10, () => new webpack.DefinePlugin(myConfig.getDefinedVariables()));\r\n\r\nmyConfig.addComplexLoader(20, {\r\n        test: /\\.(js|jsx)$/,\r\n        loader: \'babel-loader\',\r\n        exclude: /node_modules/,\r\n        options: {\r\n            presets: [\'babel-preset-sagess\']\r\n        }\r\n});\r\n*/\r\n\r\nmodule.exports = myConfig.toWebpackConfig(envParser(process.env));\r\n```\r\n\r\nIn your package.json, add scripts and better scripts.\r\nSee the following example :\r\n\r\n- the `start` script is made to use hot reload, source maps and dev-server\r\n- the `watch` script is made to use a watcher, with a developpement config, but without source-maps or hot-reload\r\n- the `bundle` script is made to build production-ready js and css, without console log, with minified files, to deliver in test environnement\r\n\r\nBoth the `watch` and `bundle` postfix the generated file name with the version in package.json, to avoid cache issues (`USE_VERSiON` parameter)\r\nThe other generated file name contain a hash, for the same purpose.\r\n\r\n```js\r\n    "scripts": {\r\n        "bundle": "better-npm-run bundle",\r\n        "watch": "better-npm-run watch",\r\n        "start": "better-npm-run start",\r\n    },\r\n    "betterScripts": {\r\n        "bundle": {\r\n            "command": "webpack --color --progress",\r\n            "env": {\r\n                "ANCHOR_CLASS": "application",\r\n                "ENTRY_FILE_PATH": "./app/index",\r\n                "OUTPUT_DIR": "../../my/app/folder",\r\n                "OUTPUT_PUBLIC_PATH": "./",\r\n                "GENERATE_HTML": "false",\r\n                "USE_VERSION": "true",\r\n                "DEV": "false",\r\n                "NODE_ENV": "production",\r\n                "SOURCE_MAPS": "false",\r\n                "MINIMIFY": "true",\r\n                "DROP_CONSOLE": "true"\r\n            }\r\n        },\r\n        "watch": {\r\n            "command": "webpack --color --watch --progress",\r\n            "env": {\r\n                "ANCHOR_CLASS": "application",\r\n                "ENTRY_FILE_PATH": "./app/index",\r\n                "OUTPUT_DIR": "../../my/app/folder",\r\n                "OUTPUT_PUBLIC_PATH": "./",\r\n                "USE_VERSION": "true",\r\n                "DEV": "true",\r\n                "NODE_ENV": "development",\r\n                "HOT_RELOAD": "false",\r\n                "SOURCE_MAPS": "false"\r\n            }\r\n        },\r\n        "start": {\r\n            "command": "sagess-dev-server",\r\n            "env": {\r\n                "ENTRY_FILE_PATH": "./app",\r\n                "DEV_SERVER_SUBDOMAIN":"AtlasFrontEnd/",\r\n                "NODE_ENV": "development",\r\n                "HOT_RELOAD": "true",\r\n                "GENERATE_HTML": "true"\r\n            }\r\n        },\r\n    },\r\n\r\n```\r\n\r\n\r\n### Which config should I use ?\r\n\r\nIf you are not using defined variables such as `BASE_URL`,  `API_ROOT`, `LOCAL_FOCUS` (that is to say, if you are using `backbone`), use the base config `const baseConfig = require(\'webpack-sagess/config/base\');`.\r\nElse, use the default config `const defaultConfig = require(\'webpack-sagess/config/default\');`.\r\n\r\n### I want to use the base config, but I want to add a custom loader (such as TypeScript, or anything else). How should I do ?\r\n\r\nEasy, the loaders and plugins are ordered, and the webpack config is defined only when calling toWebpackConfig().\r\nJust use any order you want to add a loader or a plugin between two existing loaders or plugins.\r\n\r\n#### Plugins \r\n\r\n- 10 - DefinePlugin\r\n- 20 - MiniCssExtractPlugin\r\n- 30 - HotModuleReplacementPlugin\r\n- 40 - HtmlWebpackPlugin\r\n- 50 - UglifyJsPlugin\r\n\r\n#### Loaders \r\n\r\n- 10 - source map loader (using `enforce:pre`, so it is a pre loader)\r\n- 20 - babel loader\r\n- 30 - SASS -> MiniCssExtractPlugin, with css-loader, postcss-loader, sass-loader\r\n- 40 - CSS -> MiniCssExtractPlugin, with css-loader, postcss-loader\r\n- 50 - url-loader (for ressources files)\r\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: '8391e003061b9e0ea87b15fa18361597e0061b25',
21 silly publish   bugs: { url: 'https://github.com/anasamo92/webpack-sagess/issues' },
21 silly publish   homepage: 'https://github.com/anasamo92/webpack-sagess#readme',
21 silly publish   _id: 'webpack-sagess@1.0.5',
21 silly publish   _shasum: '0cbbb9d56a7580b7ee0d7b362c5fabe3d3ba5de0',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name webpack-sagess
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'webpack-sagess',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'webpack-sagess',
26 silly mapToRegistry   name: 'webpack-sagess',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/webpack-sagess
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading C:\Users\ASA18330\AppData\Roaming\npm-cache\webpack-sagess\1.0.5\package.tgz
30 verbose request uri https://registry.npmjs.org/webpack-sagess
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 6:03:36 PM
33 verbose request using bearer token for auth
34 verbose request id 384ede74e7f4d77f
35 http request PUT https://registry.npmjs.org/webpack-sagess
36 http 403 https://registry.npmjs.org/webpack-sagess
37 verbose headers { date: 'Thu, 18 Mar 2021 16:03:13 GMT',
37 verbose headers   'content-type': 'application/json',
37 verbose headers   'transfer-encoding': 'chunked',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'set-cookie': [ '__cfduid=d85a846120da5c8b99ab49b8d9ec57c841616083392; expires=Sat, 17-Apr-21 16:03:12 GMT; path=/; domain=.npmjs.org; HttpOnly; SameSite=Lax' ],
37 verbose headers   'cf-ray': '631fb094df65fcfd-OTP',
37 verbose headers   'cf-cache-status': 'DYNAMIC',
37 verbose headers   'cf-request-id': '08e7acb10a0000fcfd6ba69000000001',
37 verbose headers   'expect-ct': 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"',
37 verbose headers   vary: 'Accept-Encoding',
37 verbose headers   server: 'cloudflare',
37 verbose headers   'content-encoding': 'gzip' }
38 verbose request invalidating C:\Users\ASA18330\AppData\Roaming\npm-cache\registry.npmjs.org\webpack-sagess on PUT
39 error publish Failed PUT 403
40 verbose stack Error: You cannot publish over the previously published versions: 1.0.5. : webpack-sagess
40 verbose stack     at makeError (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:302:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:290:14)
40 verbose stack     at C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:216:7
40 verbose stack     at Gunzip.onEnd (zlib.js:213:5)
40 verbose stack     at emitNone (events.js:91:20)
40 verbose stack     at Gunzip.emit (events.js:185:7)
40 verbose stack     at endReadableNT (_stream_readable.js:974:12)
40 verbose stack     at _combinedTickCallback (internal/process/next_tick.js:74:11)
40 verbose stack     at process._tickCallback (internal/process/next_tick.js:98:9)
41 verbose statusCode 403
42 verbose pkgid webpack-sagess
43 verbose cwd D:\modified_npm_packages\webpack-sagess
44 error Windows_NT 10.0.19042
45 error argv "C:\\Program Files\\nodejs\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "publish"
46 error node v7.0.0
47 error npm  v3.10.8
48 error code E403
49 error You cannot publish over the previously published versions: 1.0.5. : webpack-sagess
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
